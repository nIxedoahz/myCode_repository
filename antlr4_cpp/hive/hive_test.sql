create database newDB location "/tmp/";
create database ac;
create database db_alter_onr;
create database if not exists dummydb;
create table acidjoin1(name varchar(50), age int) clustered by (age) into 2 buckets stored as orc TBLPROPERTIES ("transactional"="true"); 
create table acidjoin2(name varchar(50), gpa decimal(3, 2)) clustered by (gpa) into 4 buckets stored as orc TBLPROPERTIES ("transactional"="true"); 
create table acidjoin3(name varchar(50), age int, gpa decimal(3, 2)) clustered by (gpa) into 8 buckets stored as orc TBLPROPERTIES ("transactional"="true"); 
drop database ac;
drop database dummydb;
drop database if exists statsdb1;
drop database if exists statsdb2;
drop table if exists acid1;
drop table if exists acid2;
drop table acid1;
drop table acid2;
drop role sRc_roLE;
drop role Src_role2;
drop view vt1_n0;
drop view t1_n107;
drop view if exists v_n14;
drop view if exists v_n14;
drop function perm_fn;
explain drop function mydb.func1;
drop function mydb.func1;
drop function mydb.qtest_get_java_boolean;
drop materialized view `masking_test_view_n_mv`;
drop materialized view `masking_test_view_n_mv_2`;
drop materialized view `masking_test_view_n_mv_3`;
drop materialized view `masking_test_view_n_mv_4`;
alter table acid2 update statistics set('numRows'='210', 'rawDataSize'='840');
alter table acid1 update statistics set('numRows'='316', 'rawDataSize'='1265');
alter table stats_nonpart rename to stats_nonpart2;
alter table stats_nonpart2 set serde 'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe';
explain alter database db_alter_onr set owner user user1;
alter database db_alter_onr set owner user user1;
alter database db_alter_onr set owner role role1;
alter database db2 set dbproperties (
alter view av1 as select c2, c3 from at1;
alter view V1_n5 set tblproperties ('test'='thisisatest');
alter view dest_v1 as select ctinyint from alltypesorc;
alter view dest_v3 as
alter materialized view cmv_mat_view2_n4 disable rewrite;
alter materialized view cmv_mat_view2_n4 enable rewrite;
alter materialized view cmv_mat_view2_n4 enable rewrite;
create temporary table random_types_table (
create temporary function temp_fn as 'org.apache.hadoop.hive.ql.udf.UDFAscii';
create temporary table tmp1(c1 string, c2 string);
create temporary table table1(id int, val int, val1 int, dimid int);
create function perm_fn as 'org.apache.hadoop.hive.ql.udf.UDFAscii';
explain create function mydb.func1 as 'org.apache.hadoop.hive.ql.udf.generic.GenericUDFUpper';
create function mydb.func1 as 'org.apache.hadoop.hive.ql.udf.generic.GenericUDFUpper';
create view av1 as select c1, c2 from at1;
create view v_cli_n0 (i) as select i from t_cli_n1;
create view vt1_n0 as select * from t1_n108;
create view v_n9 as select * from src_autho_test_n8;
create materialized view `masking_test_view_n_mv` as
select key from `masking_test_n_mv`;
create materialized view `masking_test_view_n_mv` as
select key from `masking_test_n_mv`;
explain reload functions;
reload functions;
explain reload function;
reload function;
create role sRc_roLE;
create role src_Role2;
create role src_role_wadmin;
create role r1;
grant select on table src_auth_tmp_n1 to user hive_test_user;
grant Create on table authorization_part_n1 to user hive_test_user;
grant Update on table authorization_part_n1 to user hive_test_user;
insert into table acidjoin1 values ('aaa', 35), ('bbb', 32), ('ccc', 32), ('ddd', 35), ('eee', 32); 
insert into table acidjoin2 values ('aaa', 3.00), ('bbb', 3.01), ('ccc', 3.02), ('ddd', 3.03), ('eee', 3.04); 
insert into table acidjoin3 select a.name, age, gpa from acidjoin1 a join acidjoin2 b on (a.name = b.name);
insert into table stats_nonpart values (1, "foo");
insert overwrite table wre1_db.wre1_ext4 select * from src where key < 10;
insert overwrite table wre1_ext5 select * from src where key < 10;
insert overwrite table wre1_db.wre1_ext6 select * from src where key < 10;
from (select sum(i) over (partition by ts order by i), s from over10k_n22) tt insert overwrite table t1_n142 select * insert overwrite table t2_n83 select * ;
insert overwrite table wre1_db.wre1_ext4 select * from src where key < 10;
insert overwrite table wre1_ext5 select * from src where key < 10;
insert overwrite table wre1_db.wre1_ext6 select * from src where key < 10;
from (select sum(i) over (partition by ts order by i), s from over10k_n22) tt insert overwrite table t1_n142 select * insert overwrite table t2_n83 select * ;
load data local inpath '../../data/files/over10k' into table over10k_n20;
load data local inpath '../../data/files/over10k' into table over10k_n4;
load data local inpath '../../data/files/over10k' into table over10k_n16;
load data local inpath '../../data/files/over10k' into table over10k_n18;
update acid_wnm set b = 'fred' where b = 'nosuchvalue';
update acid_uwnp set b = 'fred' where b = '0ruyd6Y50JpdGRf6HqD';
explain update testacid1 set id = '206' where id = '0128';
update testacid1 set id = '206' where id = '0128';
delete from over10k_orc where t = 3;
delete from t_auth_del where i > 0;
delete from target where p in (select t.q1 from source t where t.a1 = 5);
delete from acid_danp;
merge into target t using source s on t.a = s.a1 when matched and p = 1 and q = 2 then update set b = 1 when matched and p = 2 and q = 2 then delete when not matched and a1 > 100 then insert values(s.a1,s.b1,s.p1, s.q1);
merge into target t using source s on t.a = s.a1 when matched and p = 1 and q = 2 then update set b = 1 when matched and p = 2 and q = 2 then delete when not matched and a1 > 100 then insert values(s.a1,s.b1,s.p1, s.q1);
analyze table stats_nonpart compute statistics for columns;
analyze table stats_nonpart2 compute statistics for columns;
analyze table stats_part partition(p) compute statistics for columns;
analyze table stats_part partition(p) compute statistics for columns;
describe extended alter2;
import table exim_imported_dept from 'ql/test/data/exports/exim_department';
import table exim_employee_n10 partition (emp_country="us", emp_state="tn") from 'ql/test/data/exports/exim_employee';
import table exim_employee_n11 partition (emp_country="us", emp_state="tn") 
import table exim_employee_n4 partition (emp_country="us", emp_state="tn") 
export table exim_department_n7 to 'ql/test/data/exports/exim_department';
export table exim_employee_n9 to 'ql/test/data/exports/exim_employee';
export table exim_employee to 'ql/test/data/exports/exim_employee';
export table exim_employee_n5 to 'ql/test/data/exports/exim_employee';
